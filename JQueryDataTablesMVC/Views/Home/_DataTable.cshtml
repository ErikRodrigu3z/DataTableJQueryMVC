@using System.Reflection
@model DataTableViewModel
@{    
    Type entityType = Model.Entity != null ? Type.GetType("JQueryDataTablesMVC.Models." + Model.Entity.GetType().Name) : null;
    IEnumerable<PropertyInfo> properties = entityType?.GetProperties() ?? Enumerable.Empty<PropertyInfo>();
}

<!-- js scripts -->
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/datatable/datatables.min.js"></script>


<table id="myTable" class="table table-bordered table-striped table-hover table-responsive">
    <thead>
        <tr>
            <th></th>
            @foreach (var prop in entityType.GetProperties())
            {
                <th>@prop.Name</th>
            }
        </tr>
    </thead>
    <tbody>
    </tbody>
    <tfoot>
    </tfoot>
</table>

   
<script>
    let url = '@Model.Url';
    // Obtener el tipo de entidad desde el modelo de la vista
    var entityType = '@Model.Entity != null ? Type.GetType("JQueryDataTablesMVC.Models." + Model.Entity.GetType().Name) : null;';

    // Crear una función que devuelva la información de las propiedades de la entidad
    function obtenerPropiedades(entidad) {
        var propiedades = [];

        for (var propiedad in entidad) {
            if (entidad.hasOwnProperty(propiedad)) {
                propiedades.push({
                    data: propiedad,
                    name: propiedad,
                    autoWidth: true
                });
            }
        }

        return propiedades;
    }

    // Crear un objeto de configuración para las columnas de DataTable
    var columnas = [
        {
            data: null,
            render: function (data, type, row) {
                return '<button onclick="editRow(' + row.id + ')">Editar</button>';
            }
        }
    ];

    // Agregar las propiedades de la entidad como columnas
    columnas.push(...@Html.Raw(Json.Serialize(properties.Select(prop => new
        {
            data = prop.Name,
            name = prop.Name,
            autoWidth = true
        }))));

    console.log(columnas);

    $(document).ready(function () {
        $('#myTable').dataTable({
            "processing": true,
            "serverSide": true,
            dom: 'Bfrtip',
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print'
            ],
            "ajax": {
                "url": url,
                "type": "POST",
                "datatype": "json",
                "async" : "true"
            },
            "pageLenght": 10,
            "filter": true,
            "responsivePriority": 1,
            "data": null,
            "columns": columnas
            // [
            //     {
            //         "data": null,
            //         "render": function (data, type, row) {
            //             return '<button onclick="editRow(' + row.id + ')">Editar</button>';
            //         }
            //     },
            //     { "data": "id", "name": "id", "autoWidth": true },
            //     { "data": "nombre", "name": "nombre", "autoWidth": true },
            //     { "data": "edad", "name": "edad", "autoWidth": true }
            // ]

        });
    });
    
    // editar row
    function editRow(row) {
        
        alert(row);
    }

    


</script>


