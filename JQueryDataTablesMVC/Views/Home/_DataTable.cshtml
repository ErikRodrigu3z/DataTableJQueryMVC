@using System.Reflection
@model DataTableViewModel
@{    
    Type entityType = Model.Entity != null ? Type.GetType("JQueryDataTablesMVC.Models." + Model.Entity.GetType().Name) : null;
    IEnumerable<PropertyInfo> properties = entityType?.GetProperties() ?? Enumerable.Empty<PropertyInfo>();
}

<!-- js scripts -->
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/datatable/datatables.min.js"></script>

<table id="myTable" class="table table-bordered table-striped table-hover table-responsive">
    <thead>
        <tr>
            <th></th>
            @foreach (var prop in entityType.GetProperties())
            {
                <th>@prop.Name</th>
            }
        </tr>
    </thead>
    <tbody>
    </tbody>
    <tfoot>
    </tfoot>
</table>

<script>
    //#region Variables
    let url = '@Model.Url';
    let stateSave = @Model.StateSave.ToString().ToLower();
    let pageLenght = @Model.PageLenght;
    // Obtener el tipo de entidad desde el modelo de la vista
    var entityType = '@Model.Entity != null ? Type.GetType("JQueryDataTablesMVC.Models." + Model.Entity.GetType().Name) : null;';   
    //#endregion    

    // Crear un objeto de configuración para las columnas de DataTable
    var columnas = [
        {
            data: null,
            render: function (data, type, row) {
                var _row = encodeURIComponent(JSON.stringify(row));                
                return `<button type="button" class="btn btn-primary" onclick="editRow('${_row}')"><i class="bi bi-pencil"></i> Editar</button>`;
            }
        }
    ];

    // Agregar las propiedades de la entidad como columnas
    @foreach (var prop in properties)
    {       
        <text>columnas.push({ data: '@prop.Name.ToLower()', name: '@prop.Name.ToLower()', autoWidth: true });</text>
    }   

    $(document).ready(function () {
        $('#myTable').dataTable({
            "processing": true,
            "serverSide": true,
            dom: 'Bfrtip',
            stateSave: stateSave,
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print'
            ],
            "ajax": {
                "url": url,
                "type": "POST",
                "datatype": "json",
                "async" : "true"
            },
            "pageLenght": 10,
            "filter": true,
            "responsivePriority": 1,
            "data": null,
            "columns": columnas
            

        });
    });
    
    // editar row
    function editRow(encodedRow) {

        var decodedRow = JSON.parse(decodeURIComponent(encodedRow));
        alert(JSON.stringify(decodedRow));
    }

    


</script>


